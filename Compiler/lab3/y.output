State 1 conflicts: 1 shift/reduce
State 31 conflicts: 1 shift/reduce
State 34 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: exp

    2 exp: lvalue
    3    | voidexp
    4    | INT
    5    | STRING
    6    | MINUS exp
    7    | lvalue ASSIGN exp
    8    | seqexp
    9    | ID LPAREN args RPAREN
   10    | exp PLUS exp
   11    | exp MINUS exp
   12    | exp TIMES exp
   13    | exp DIVIDE exp
   14    | exp EQ exp
   15    | exp NEQ exp
   16    | exp LT exp
   17    | exp LE exp
   18    | exp GT exp
   19    | exp GE exp
   20    | exp AND exp
   21    | exp OR exp
   22    | ID LBRACE recorditems RBRACE
   23    | ID LBRACK exp RBRACK OF exp
   24    | IF exp THEN exp ELSE exp
   25    | IF exp THEN exp
   26    | WHILE exp DO exp
   27    | FOR ID ASSIGN exp TO exp DO exp
   28    | BREAK
   29    | LET decs IN END
   30    | LET decs IN exps END

   31 exps: exp
   32     | exp SEMICOLON exps
   33     | error SEMICOLON exps

   34 seqexp: LPAREN exps RPAREN
   35       | LPAREN error RPAREN
   36       | LPAREN RPAREN

   37 recorditem: ID EQ exp

   38 recorditems: recorditem
   39            | recorditem COMMA recorditems
   40            | %empty

   41 voidexp: NIL

   42 args: exp
   43     | exp COMMA args
   44     | %empty

   45 tyfield: ID COLON ID

   46 tyfields: tyfield
   47         | tyfield COMMA tyfields
   48         | %empty

   49 ty: ID
   50   | LBRACE tyfields RBRACE
   51   | ARRAY OF ID

   52 tydec: TYPE ID EQ ty

   53 tydecs: tydec
   54       | tydec tydecs

   55 vardec: VAR ID ASSIGN exp
   56       | VAR ID COLON ID ASSIGN exp

   57 fundec: FUNCTION ID LPAREN tyfields RPAREN EQ exp
   58       | FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ exp

   59 fundecs: fundec
   60        | fundec fundecs

   61 dec: tydecs
   62    | vardec
   63    | fundecs

   64 decs: dec decs
   65     | %empty

   66 lvalue: ID
   67       | lvalue DOT ID
   68       | lvalue LBRACK exp RBRACK
   69       | ID LBRACK exp RBRACK


Terminals, with rules where they appear

$end (0) 0
error (256) 33 35
ID (258) 9 22 23 27 37 45 49 51 52 55 56 57 58 66 67 69
STRING (259) 5
INT (260) 4
COMMA (261) 39 43 47
COLON (262) 45 56 58
SEMICOLON (263) 32 33
LPAREN (264) 9 34 35 36 57 58
RPAREN (265) 9 34 35 36 57 58
LBRACK (266) 23 68 69
RBRACK (267) 23 68 69
LBRACE (268) 22 50
RBRACE (269) 22 50
DOT (270) 67
PLUS (271) 10
MINUS (272) 6 11
TIMES (273) 12
DIVIDE (274) 13
EQ (275) 14 37 52 57 58
NEQ (276) 15
LT (277) 16
LE (278) 17
GT (279) 18
GE (280) 19
AND (281) 20
OR (282) 21
ASSIGN (283) 7 27 55 56
ARRAY (284) 51
IF (285) 24 25
THEN (286) 24 25
ELSE (287) 24
WHILE (288) 26
FOR (289) 27
TO (290) 27
DO (291) 26 27
LET (292) 29 30
IN (293) 29 30
END (294) 29 30
OF (295) 23 51
BREAK (296) 28
NIL (297) 41
FUNCTION (298) 57 58
VAR (299) 55 56
TYPE (300) 52
UMINUS (301)


Nonterminals, with rules where they appear

$accept (47)
    on left: 0
program (48)
    on left: 1, on right: 0
exp (49)
    on left: 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22
    23 24 25 26 27 28 29 30, on right: 1 6 7 10 11 12 13 14 15 16 17
    18 19 20 21 23 24 25 26 27 31 32 37 42 43 55 56 57 58 68 69
exps (50)
    on left: 31 32 33, on right: 30 32 33 34
seqexp (51)
    on left: 34 35 36, on right: 8
recorditem (52)
    on left: 37, on right: 38 39
recorditems (53)
    on left: 38 39 40, on right: 22 39
voidexp (54)
    on left: 41, on right: 3
args (55)
    on left: 42 43 44, on right: 9 43
tyfield (56)
    on left: 45, on right: 46 47
tyfields (57)
    on left: 46 47 48, on right: 47 50 57 58
ty (58)
    on left: 49 50 51, on right: 52
tydec (59)
    on left: 52, on right: 53 54
tydecs (60)
    on left: 53 54, on right: 54 61
vardec (61)
    on left: 55 56, on right: 62
fundec (62)
    on left: 57 58, on right: 59 60
fundecs (63)
    on left: 59 60, on right: 60 63
dec (64)
    on left: 61 62 63, on right: 64
decs (65)
    on left: 64 65, on right: 29 30 64
lvalue (66)
    on left: 66 67 68 69, on right: 2 7 67 68


State 0

    0 $accept: . program $end

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    program  go to state 12
    exp      go to state 13
    seqexp   go to state 14
    voidexp  go to state 15
    lvalue   go to state 16


State 1

    9 exp: ID . LPAREN args RPAREN
   22    | ID . LBRACE recorditems RBRACE
   23    | ID . LBRACK exp RBRACK OF exp
   66 lvalue: ID .
   69       | ID . LBRACK exp RBRACK

    LPAREN  shift, and go to state 17
    LBRACK  shift, and go to state 18
    LBRACE  shift, and go to state 19

    LBRACK    [reduce using rule 66 (lvalue)]
    $default  reduce using rule 66 (lvalue)


State 2

    5 exp: STRING .

    $default  reduce using rule 5 (exp)


State 3

    4 exp: INT .

    $default  reduce using rule 4 (exp)


State 4

   34 seqexp: LPAREN . exps RPAREN
   35       | LPAREN . error RPAREN
   36       | LPAREN . RPAREN

    error   shift, and go to state 20
    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    RPAREN  shift, and go to state 21
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 22
    exps     go to state 23
    seqexp   go to state 14
    voidexp  go to state 15
    lvalue   go to state 16


State 5

    6 exp: MINUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 24
    seqexp   go to state 14
    voidexp  go to state 15
    lvalue   go to state 16


State 6

   24 exp: IF . exp THEN exp ELSE exp
   25    | IF . exp THEN exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 25
    seqexp   go to state 14
    voidexp  go to state 15
    lvalue   go to state 16


State 7

   26 exp: WHILE . exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 26
    seqexp   go to state 14
    voidexp  go to state 15
    lvalue   go to state 16


State 8

   27 exp: FOR . ID ASSIGN exp TO exp DO exp

    ID  shift, and go to state 27


State 9

   29 exp: LET . decs IN END
   30    | LET . decs IN exps END

    FUNCTION  shift, and go to state 28
    VAR       shift, and go to state 29
    TYPE      shift, and go to state 30

    $default  reduce using rule 65 (decs)

    tydec    go to state 31
    tydecs   go to state 32
    vardec   go to state 33
    fundec   go to state 34
    fundecs  go to state 35
    dec      go to state 36
    decs     go to state 37


State 10

   28 exp: BREAK .

    $default  reduce using rule 28 (exp)


State 11

   41 voidexp: NIL .

    $default  reduce using rule 41 (voidexp)


State 12

    0 $accept: program . $end

    $end  shift, and go to state 38


State 13

    1 program: exp .
   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   15    | exp . NEQ exp
   16    | exp . LT exp
   17    | exp . LE exp
   18    | exp . GT exp
   19    | exp . GE exp
   20    | exp . AND exp
   21    | exp . OR exp

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42
    EQ      shift, and go to state 43
    NEQ     shift, and go to state 44
    LT      shift, and go to state 45
    LE      shift, and go to state 46
    GT      shift, and go to state 47
    GE      shift, and go to state 48
    AND     shift, and go to state 49
    OR      shift, and go to state 50

    $default  reduce using rule 1 (program)


State 14

    8 exp: seqexp .

    $default  reduce using rule 8 (exp)


State 15

    3 exp: voidexp .

    $default  reduce using rule 3 (exp)


State 16

    2 exp: lvalue .
    7    | lvalue . ASSIGN exp
   67 lvalue: lvalue . DOT ID
   68       | lvalue . LBRACK exp RBRACK

    LBRACK  shift, and go to state 51
    DOT     shift, and go to state 52
    ASSIGN  shift, and go to state 53

    $default  reduce using rule 2 (exp)


State 17

    9 exp: ID LPAREN . args RPAREN

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    $default  reduce using rule 44 (args)

    exp      go to state 54
    seqexp   go to state 14
    voidexp  go to state 15
    args     go to state 55
    lvalue   go to state 16


State 18

   23 exp: ID LBRACK . exp RBRACK OF exp
   69 lvalue: ID LBRACK . exp RBRACK

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 56
    seqexp   go to state 14
    voidexp  go to state 15
    lvalue   go to state 16


State 19

   22 exp: ID LBRACE . recorditems RBRACE

    ID  shift, and go to state 57

    $default  reduce using rule 40 (recorditems)

    recorditem   go to state 58
    recorditems  go to state 59


State 20

   33 exps: error . SEMICOLON exps
   35 seqexp: LPAREN error . RPAREN

    SEMICOLON  shift, and go to state 60
    RPAREN     shift, and go to state 61


State 21

   36 seqexp: LPAREN RPAREN .

    $default  reduce using rule 36 (seqexp)


State 22

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   15    | exp . NEQ exp
   16    | exp . LT exp
   17    | exp . LE exp
   18    | exp . GT exp
   19    | exp . GE exp
   20    | exp . AND exp
   21    | exp . OR exp
   31 exps: exp .
   32     | exp . SEMICOLON exps

    SEMICOLON  shift, and go to state 62
    PLUS       shift, and go to state 39
    MINUS      shift, and go to state 40
    TIMES      shift, and go to state 41
    DIVIDE     shift, and go to state 42
    EQ         shift, and go to state 43
    NEQ        shift, and go to state 44
    LT         shift, and go to state 45
    LE         shift, and go to state 46
    GT         shift, and go to state 47
    GE         shift, and go to state 48
    AND        shift, and go to state 49
    OR         shift, and go to state 50

    $default  reduce using rule 31 (exps)


State 23

   34 seqexp: LPAREN exps . RPAREN

    RPAREN  shift, and go to state 63


State 24

    6 exp: MINUS exp .
   10    | exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   15    | exp . NEQ exp
   16    | exp . LT exp
   17    | exp . LE exp
   18    | exp . GT exp
   19    | exp . GE exp
   20    | exp . AND exp
   21    | exp . OR exp

    $default  reduce using rule 6 (exp)


State 25

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   15    | exp . NEQ exp
   16    | exp . LT exp
   17    | exp . LE exp
   18    | exp . GT exp
   19    | exp . GE exp
   20    | exp . AND exp
   21    | exp . OR exp
   24    | IF exp . THEN exp ELSE exp
   25    | IF exp . THEN exp

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42
    EQ      shift, and go to state 43
    NEQ     shift, and go to state 44
    LT      shift, and go to state 45
    LE      shift, and go to state 46
    GT      shift, and go to state 47
    GE      shift, and go to state 48
    AND     shift, and go to state 49
    OR      shift, and go to state 50
    THEN    shift, and go to state 64


State 26

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   15    | exp . NEQ exp
   16    | exp . LT exp
   17    | exp . LE exp
   18    | exp . GT exp
   19    | exp . GE exp
   20    | exp . AND exp
   21    | exp . OR exp
   26    | WHILE exp . DO exp

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42
    EQ      shift, and go to state 43
    NEQ     shift, and go to state 44
    LT      shift, and go to state 45
    LE      shift, and go to state 46
    GT      shift, and go to state 47
    GE      shift, and go to state 48
    AND     shift, and go to state 49
    OR      shift, and go to state 50
    DO      shift, and go to state 65


State 27

   27 exp: FOR ID . ASSIGN exp TO exp DO exp

    ASSIGN  shift, and go to state 66


State 28

   57 fundec: FUNCTION . ID LPAREN tyfields RPAREN EQ exp
   58       | FUNCTION . ID LPAREN tyfields RPAREN COLON ID EQ exp

    ID  shift, and go to state 67


State 29

   55 vardec: VAR . ID ASSIGN exp
   56       | VAR . ID COLON ID ASSIGN exp

    ID  shift, and go to state 68


State 30

   52 tydec: TYPE . ID EQ ty

    ID  shift, and go to state 69


State 31

   53 tydecs: tydec .
   54       | tydec . tydecs

    TYPE  shift, and go to state 30

    TYPE      [reduce using rule 53 (tydecs)]
    $default  reduce using rule 53 (tydecs)

    tydec   go to state 31
    tydecs  go to state 70


State 32

   61 dec: tydecs .

    $default  reduce using rule 61 (dec)


State 33

   62 dec: vardec .

    $default  reduce using rule 62 (dec)


State 34

   59 fundecs: fundec .
   60        | fundec . fundecs

    FUNCTION  shift, and go to state 28

    FUNCTION  [reduce using rule 59 (fundecs)]
    $default  reduce using rule 59 (fundecs)

    fundec   go to state 34
    fundecs  go to state 71


State 35

   63 dec: fundecs .

    $default  reduce using rule 63 (dec)


State 36

   64 decs: dec . decs

    FUNCTION  shift, and go to state 28
    VAR       shift, and go to state 29
    TYPE      shift, and go to state 30

    $default  reduce using rule 65 (decs)

    tydec    go to state 31
    tydecs   go to state 32
    vardec   go to state 33
    fundec   go to state 34
    fundecs  go to state 35
    dec      go to state 36
    decs     go to state 72


State 37

   29 exp: LET decs . IN END
   30    | LET decs . IN exps END

    IN  shift, and go to state 73


State 38

    0 $accept: program $end .

    $default  accept


State 39

   10 exp: exp PLUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 74
    seqexp   go to state 14
    voidexp  go to state 15
    lvalue   go to state 16


State 40

   11 exp: exp MINUS . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 75
    seqexp   go to state 14
    voidexp  go to state 15
    lvalue   go to state 16


State 41

   12 exp: exp TIMES . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 76
    seqexp   go to state 14
    voidexp  go to state 15
    lvalue   go to state 16


State 42

   13 exp: exp DIVIDE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 77
    seqexp   go to state 14
    voidexp  go to state 15
    lvalue   go to state 16


State 43

   14 exp: exp EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 78
    seqexp   go to state 14
    voidexp  go to state 15
    lvalue   go to state 16


State 44

   15 exp: exp NEQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 79
    seqexp   go to state 14
    voidexp  go to state 15
    lvalue   go to state 16


State 45

   16 exp: exp LT . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 80
    seqexp   go to state 14
    voidexp  go to state 15
    lvalue   go to state 16


State 46

   17 exp: exp LE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 81
    seqexp   go to state 14
    voidexp  go to state 15
    lvalue   go to state 16


State 47

   18 exp: exp GT . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 82
    seqexp   go to state 14
    voidexp  go to state 15
    lvalue   go to state 16


State 48

   19 exp: exp GE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 83
    seqexp   go to state 14
    voidexp  go to state 15
    lvalue   go to state 16


State 49

   20 exp: exp AND . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 84
    seqexp   go to state 14
    voidexp  go to state 15
    lvalue   go to state 16


State 50

   21 exp: exp OR . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 85
    seqexp   go to state 14
    voidexp  go to state 15
    lvalue   go to state 16


State 51

   68 lvalue: lvalue LBRACK . exp RBRACK

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 86
    seqexp   go to state 14
    voidexp  go to state 15
    lvalue   go to state 16


State 52

   67 lvalue: lvalue DOT . ID

    ID  shift, and go to state 87


State 53

    7 exp: lvalue ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 88
    seqexp   go to state 14
    voidexp  go to state 15
    lvalue   go to state 16


State 54

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   15    | exp . NEQ exp
   16    | exp . LT exp
   17    | exp . LE exp
   18    | exp . GT exp
   19    | exp . GE exp
   20    | exp . AND exp
   21    | exp . OR exp
   42 args: exp .
   43     | exp . COMMA args

    COMMA   shift, and go to state 89
    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42
    EQ      shift, and go to state 43
    NEQ     shift, and go to state 44
    LT      shift, and go to state 45
    LE      shift, and go to state 46
    GT      shift, and go to state 47
    GE      shift, and go to state 48
    AND     shift, and go to state 49
    OR      shift, and go to state 50

    $default  reduce using rule 42 (args)


State 55

    9 exp: ID LPAREN args . RPAREN

    RPAREN  shift, and go to state 90


State 56

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   15    | exp . NEQ exp
   16    | exp . LT exp
   17    | exp . LE exp
   18    | exp . GT exp
   19    | exp . GE exp
   20    | exp . AND exp
   21    | exp . OR exp
   23    | ID LBRACK exp . RBRACK OF exp
   69 lvalue: ID LBRACK exp . RBRACK

    RBRACK  shift, and go to state 91
    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42
    EQ      shift, and go to state 43
    NEQ     shift, and go to state 44
    LT      shift, and go to state 45
    LE      shift, and go to state 46
    GT      shift, and go to state 47
    GE      shift, and go to state 48
    AND     shift, and go to state 49
    OR      shift, and go to state 50


State 57

   37 recorditem: ID . EQ exp

    EQ  shift, and go to state 92


State 58

   38 recorditems: recorditem .
   39            | recorditem . COMMA recorditems

    COMMA  shift, and go to state 93

    $default  reduce using rule 38 (recorditems)


State 59

   22 exp: ID LBRACE recorditems . RBRACE

    RBRACE  shift, and go to state 94


State 60

   33 exps: error SEMICOLON . exps

    error   shift, and go to state 95
    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 22
    exps     go to state 96
    seqexp   go to state 14
    voidexp  go to state 15
    lvalue   go to state 16


State 61

   35 seqexp: LPAREN error RPAREN .

    $default  reduce using rule 35 (seqexp)


State 62

   32 exps: exp SEMICOLON . exps

    error   shift, and go to state 95
    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 22
    exps     go to state 97
    seqexp   go to state 14
    voidexp  go to state 15
    lvalue   go to state 16


State 63

   34 seqexp: LPAREN exps RPAREN .

    $default  reduce using rule 34 (seqexp)


State 64

   24 exp: IF exp THEN . exp ELSE exp
   25    | IF exp THEN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 98
    seqexp   go to state 14
    voidexp  go to state 15
    lvalue   go to state 16


State 65

   26 exp: WHILE exp DO . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 99
    seqexp   go to state 14
    voidexp  go to state 15
    lvalue   go to state 16


State 66

   27 exp: FOR ID ASSIGN . exp TO exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 100
    seqexp   go to state 14
    voidexp  go to state 15
    lvalue   go to state 16


State 67

   57 fundec: FUNCTION ID . LPAREN tyfields RPAREN EQ exp
   58       | FUNCTION ID . LPAREN tyfields RPAREN COLON ID EQ exp

    LPAREN  shift, and go to state 101


State 68

   55 vardec: VAR ID . ASSIGN exp
   56       | VAR ID . COLON ID ASSIGN exp

    COLON   shift, and go to state 102
    ASSIGN  shift, and go to state 103


State 69

   52 tydec: TYPE ID . EQ ty

    EQ  shift, and go to state 104


State 70

   54 tydecs: tydec tydecs .

    $default  reduce using rule 54 (tydecs)


State 71

   60 fundecs: fundec fundecs .

    $default  reduce using rule 60 (fundecs)


State 72

   64 decs: dec decs .

    $default  reduce using rule 64 (decs)


State 73

   29 exp: LET decs IN . END
   30    | LET decs IN . exps END

    error   shift, and go to state 95
    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    END     shift, and go to state 105
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 22
    exps     go to state 106
    seqexp   go to state 14
    voidexp  go to state 15
    lvalue   go to state 16


State 74

   10 exp: exp . PLUS exp
   10    | exp PLUS exp .
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   15    | exp . NEQ exp
   16    | exp . LT exp
   17    | exp . LE exp
   18    | exp . GT exp
   19    | exp . GE exp
   20    | exp . AND exp
   21    | exp . OR exp

    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42

    $default  reduce using rule 10 (exp)


State 75

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   11    | exp MINUS exp .
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   15    | exp . NEQ exp
   16    | exp . LT exp
   17    | exp . LE exp
   18    | exp . GT exp
   19    | exp . GE exp
   20    | exp . AND exp
   21    | exp . OR exp

    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42

    $default  reduce using rule 11 (exp)


State 76

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   12    | exp TIMES exp .
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   15    | exp . NEQ exp
   16    | exp . LT exp
   17    | exp . LE exp
   18    | exp . GT exp
   19    | exp . GE exp
   20    | exp . AND exp
   21    | exp . OR exp

    $default  reduce using rule 12 (exp)


State 77

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   13    | exp DIVIDE exp .
   14    | exp . EQ exp
   15    | exp . NEQ exp
   16    | exp . LT exp
   17    | exp . LE exp
   18    | exp . GT exp
   19    | exp . GE exp
   20    | exp . AND exp
   21    | exp . OR exp

    $default  reduce using rule 13 (exp)


State 78

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   14    | exp EQ exp .
   15    | exp . NEQ exp
   16    | exp . LT exp
   17    | exp . LE exp
   18    | exp . GT exp
   19    | exp . GE exp
   20    | exp . AND exp
   21    | exp . OR exp

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 14 (exp)


State 79

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   15    | exp . NEQ exp
   15    | exp NEQ exp .
   16    | exp . LT exp
   17    | exp . LE exp
   18    | exp . GT exp
   19    | exp . GE exp
   20    | exp . AND exp
   21    | exp . OR exp

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 15 (exp)


State 80

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   15    | exp . NEQ exp
   16    | exp . LT exp
   16    | exp LT exp .
   17    | exp . LE exp
   18    | exp . GT exp
   19    | exp . GE exp
   20    | exp . AND exp
   21    | exp . OR exp

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 16 (exp)


State 81

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   15    | exp . NEQ exp
   16    | exp . LT exp
   17    | exp . LE exp
   17    | exp LE exp .
   18    | exp . GT exp
   19    | exp . GE exp
   20    | exp . AND exp
   21    | exp . OR exp

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 17 (exp)


State 82

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   15    | exp . NEQ exp
   16    | exp . LT exp
   17    | exp . LE exp
   18    | exp . GT exp
   18    | exp GT exp .
   19    | exp . GE exp
   20    | exp . AND exp
   21    | exp . OR exp

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 18 (exp)


State 83

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   15    | exp . NEQ exp
   16    | exp . LT exp
   17    | exp . LE exp
   18    | exp . GT exp
   19    | exp . GE exp
   19    | exp GE exp .
   20    | exp . AND exp
   21    | exp . OR exp

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LT   error (nonassociative)
    LE   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 19 (exp)


State 84

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   15    | exp . NEQ exp
   16    | exp . LT exp
   17    | exp . LE exp
   18    | exp . GT exp
   19    | exp . GE exp
   20    | exp . AND exp
   20    | exp AND exp .
   21    | exp . OR exp

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42
    EQ      shift, and go to state 43
    NEQ     shift, and go to state 44
    LT      shift, and go to state 45
    LE      shift, and go to state 46
    GT      shift, and go to state 47
    GE      shift, and go to state 48

    $default  reduce using rule 20 (exp)


State 85

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   15    | exp . NEQ exp
   16    | exp . LT exp
   17    | exp . LE exp
   18    | exp . GT exp
   19    | exp . GE exp
   20    | exp . AND exp
   21    | exp . OR exp
   21    | exp OR exp .

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42
    EQ      shift, and go to state 43
    NEQ     shift, and go to state 44
    LT      shift, and go to state 45
    LE      shift, and go to state 46
    GT      shift, and go to state 47
    GE      shift, and go to state 48
    AND     shift, and go to state 49

    $default  reduce using rule 21 (exp)


State 86

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   15    | exp . NEQ exp
   16    | exp . LT exp
   17    | exp . LE exp
   18    | exp . GT exp
   19    | exp . GE exp
   20    | exp . AND exp
   21    | exp . OR exp
   68 lvalue: lvalue LBRACK exp . RBRACK

    RBRACK  shift, and go to state 107
    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42
    EQ      shift, and go to state 43
    NEQ     shift, and go to state 44
    LT      shift, and go to state 45
    LE      shift, and go to state 46
    GT      shift, and go to state 47
    GE      shift, and go to state 48
    AND     shift, and go to state 49
    OR      shift, and go to state 50


State 87

   67 lvalue: lvalue DOT ID .

    $default  reduce using rule 67 (lvalue)


State 88

    7 exp: lvalue ASSIGN exp .
   10    | exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   15    | exp . NEQ exp
   16    | exp . LT exp
   17    | exp . LE exp
   18    | exp . GT exp
   19    | exp . GE exp
   20    | exp . AND exp
   21    | exp . OR exp

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42
    EQ      shift, and go to state 43
    NEQ     shift, and go to state 44
    LT      shift, and go to state 45
    LE      shift, and go to state 46
    GT      shift, and go to state 47
    GE      shift, and go to state 48
    AND     shift, and go to state 49
    OR      shift, and go to state 50

    $default  reduce using rule 7 (exp)


State 89

   43 args: exp COMMA . args

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    $default  reduce using rule 44 (args)

    exp      go to state 54
    seqexp   go to state 14
    voidexp  go to state 15
    args     go to state 108
    lvalue   go to state 16


State 90

    9 exp: ID LPAREN args RPAREN .

    $default  reduce using rule 9 (exp)


State 91

   23 exp: ID LBRACK exp RBRACK . OF exp
   69 lvalue: ID LBRACK exp RBRACK .

    OF  shift, and go to state 109

    $default  reduce using rule 69 (lvalue)


State 92

   37 recorditem: ID EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 110
    seqexp   go to state 14
    voidexp  go to state 15
    lvalue   go to state 16


State 93

   39 recorditems: recorditem COMMA . recorditems

    ID  shift, and go to state 57

    $default  reduce using rule 40 (recorditems)

    recorditem   go to state 58
    recorditems  go to state 111


State 94

   22 exp: ID LBRACE recorditems RBRACE .

    $default  reduce using rule 22 (exp)


State 95

   33 exps: error . SEMICOLON exps

    SEMICOLON  shift, and go to state 60


State 96

   33 exps: error SEMICOLON exps .

    $default  reduce using rule 33 (exps)


State 97

   32 exps: exp SEMICOLON exps .

    $default  reduce using rule 32 (exps)


State 98

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   15    | exp . NEQ exp
   16    | exp . LT exp
   17    | exp . LE exp
   18    | exp . GT exp
   19    | exp . GE exp
   20    | exp . AND exp
   21    | exp . OR exp
   24    | IF exp THEN exp . ELSE exp
   25    | IF exp THEN exp .

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42
    EQ      shift, and go to state 43
    NEQ     shift, and go to state 44
    LT      shift, and go to state 45
    LE      shift, and go to state 46
    GT      shift, and go to state 47
    GE      shift, and go to state 48
    AND     shift, and go to state 49
    OR      shift, and go to state 50
    ELSE    shift, and go to state 112

    $default  reduce using rule 25 (exp)


State 99

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   15    | exp . NEQ exp
   16    | exp . LT exp
   17    | exp . LE exp
   18    | exp . GT exp
   19    | exp . GE exp
   20    | exp . AND exp
   21    | exp . OR exp
   26    | WHILE exp DO exp .

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42
    EQ      shift, and go to state 43
    NEQ     shift, and go to state 44
    LT      shift, and go to state 45
    LE      shift, and go to state 46
    GT      shift, and go to state 47
    GE      shift, and go to state 48
    AND     shift, and go to state 49
    OR      shift, and go to state 50

    $default  reduce using rule 26 (exp)


State 100

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   15    | exp . NEQ exp
   16    | exp . LT exp
   17    | exp . LE exp
   18    | exp . GT exp
   19    | exp . GE exp
   20    | exp . AND exp
   21    | exp . OR exp
   27    | FOR ID ASSIGN exp . TO exp DO exp

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42
    EQ      shift, and go to state 43
    NEQ     shift, and go to state 44
    LT      shift, and go to state 45
    LE      shift, and go to state 46
    GT      shift, and go to state 47
    GE      shift, and go to state 48
    AND     shift, and go to state 49
    OR      shift, and go to state 50
    TO      shift, and go to state 113


State 101

   57 fundec: FUNCTION ID LPAREN . tyfields RPAREN EQ exp
   58       | FUNCTION ID LPAREN . tyfields RPAREN COLON ID EQ exp

    ID  shift, and go to state 114

    $default  reduce using rule 48 (tyfields)

    tyfield   go to state 115
    tyfields  go to state 116


State 102

   56 vardec: VAR ID COLON . ID ASSIGN exp

    ID  shift, and go to state 117


State 103

   55 vardec: VAR ID ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 118
    seqexp   go to state 14
    voidexp  go to state 15
    lvalue   go to state 16


State 104

   52 tydec: TYPE ID EQ . ty

    ID      shift, and go to state 119
    LBRACE  shift, and go to state 120
    ARRAY   shift, and go to state 121

    ty  go to state 122


State 105

   29 exp: LET decs IN END .

    $default  reduce using rule 29 (exp)


State 106

   30 exp: LET decs IN exps . END

    END  shift, and go to state 123


State 107

   68 lvalue: lvalue LBRACK exp RBRACK .

    $default  reduce using rule 68 (lvalue)


State 108

   43 args: exp COMMA args .

    $default  reduce using rule 43 (args)


State 109

   23 exp: ID LBRACK exp RBRACK OF . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 124
    seqexp   go to state 14
    voidexp  go to state 15
    lvalue   go to state 16


State 110

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   15    | exp . NEQ exp
   16    | exp . LT exp
   17    | exp . LE exp
   18    | exp . GT exp
   19    | exp . GE exp
   20    | exp . AND exp
   21    | exp . OR exp
   37 recorditem: ID EQ exp .

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42
    EQ      shift, and go to state 43
    NEQ     shift, and go to state 44
    LT      shift, and go to state 45
    LE      shift, and go to state 46
    GT      shift, and go to state 47
    GE      shift, and go to state 48
    AND     shift, and go to state 49
    OR      shift, and go to state 50

    $default  reduce using rule 37 (recorditem)


State 111

   39 recorditems: recorditem COMMA recorditems .

    $default  reduce using rule 39 (recorditems)


State 112

   24 exp: IF exp THEN exp ELSE . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 125
    seqexp   go to state 14
    voidexp  go to state 15
    lvalue   go to state 16


State 113

   27 exp: FOR ID ASSIGN exp TO . exp DO exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 126
    seqexp   go to state 14
    voidexp  go to state 15
    lvalue   go to state 16


State 114

   45 tyfield: ID . COLON ID

    COLON  shift, and go to state 127


State 115

   46 tyfields: tyfield .
   47         | tyfield . COMMA tyfields

    COMMA  shift, and go to state 128

    $default  reduce using rule 46 (tyfields)


State 116

   57 fundec: FUNCTION ID LPAREN tyfields . RPAREN EQ exp
   58       | FUNCTION ID LPAREN tyfields . RPAREN COLON ID EQ exp

    RPAREN  shift, and go to state 129


State 117

   56 vardec: VAR ID COLON ID . ASSIGN exp

    ASSIGN  shift, and go to state 130


State 118

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   15    | exp . NEQ exp
   16    | exp . LT exp
   17    | exp . LE exp
   18    | exp . GT exp
   19    | exp . GE exp
   20    | exp . AND exp
   21    | exp . OR exp
   55 vardec: VAR ID ASSIGN exp .

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42
    EQ      shift, and go to state 43
    NEQ     shift, and go to state 44
    LT      shift, and go to state 45
    LE      shift, and go to state 46
    GT      shift, and go to state 47
    GE      shift, and go to state 48
    AND     shift, and go to state 49
    OR      shift, and go to state 50

    $default  reduce using rule 55 (vardec)


State 119

   49 ty: ID .

    $default  reduce using rule 49 (ty)


State 120

   50 ty: LBRACE . tyfields RBRACE

    ID  shift, and go to state 114

    $default  reduce using rule 48 (tyfields)

    tyfield   go to state 115
    tyfields  go to state 131


State 121

   51 ty: ARRAY . OF ID

    OF  shift, and go to state 132


State 122

   52 tydec: TYPE ID EQ ty .

    $default  reduce using rule 52 (tydec)


State 123

   30 exp: LET decs IN exps END .

    $default  reduce using rule 30 (exp)


State 124

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   15    | exp . NEQ exp
   16    | exp . LT exp
   17    | exp . LE exp
   18    | exp . GT exp
   19    | exp . GE exp
   20    | exp . AND exp
   21    | exp . OR exp
   23    | ID LBRACK exp RBRACK OF exp .

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42
    EQ      shift, and go to state 43
    NEQ     shift, and go to state 44
    LT      shift, and go to state 45
    LE      shift, and go to state 46
    GT      shift, and go to state 47
    GE      shift, and go to state 48
    AND     shift, and go to state 49
    OR      shift, and go to state 50

    $default  reduce using rule 23 (exp)


State 125

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   15    | exp . NEQ exp
   16    | exp . LT exp
   17    | exp . LE exp
   18    | exp . GT exp
   19    | exp . GE exp
   20    | exp . AND exp
   21    | exp . OR exp
   24    | IF exp THEN exp ELSE exp .

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42
    EQ      shift, and go to state 43
    NEQ     shift, and go to state 44
    LT      shift, and go to state 45
    LE      shift, and go to state 46
    GT      shift, and go to state 47
    GE      shift, and go to state 48
    AND     shift, and go to state 49
    OR      shift, and go to state 50

    $default  reduce using rule 24 (exp)


State 126

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   15    | exp . NEQ exp
   16    | exp . LT exp
   17    | exp . LE exp
   18    | exp . GT exp
   19    | exp . GE exp
   20    | exp . AND exp
   21    | exp . OR exp
   27    | FOR ID ASSIGN exp TO exp . DO exp

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42
    EQ      shift, and go to state 43
    NEQ     shift, and go to state 44
    LT      shift, and go to state 45
    LE      shift, and go to state 46
    GT      shift, and go to state 47
    GE      shift, and go to state 48
    AND     shift, and go to state 49
    OR      shift, and go to state 50
    DO      shift, and go to state 133


State 127

   45 tyfield: ID COLON . ID

    ID  shift, and go to state 134


State 128

   47 tyfields: tyfield COMMA . tyfields

    ID  shift, and go to state 114

    $default  reduce using rule 48 (tyfields)

    tyfield   go to state 115
    tyfields  go to state 135


State 129

   57 fundec: FUNCTION ID LPAREN tyfields RPAREN . EQ exp
   58       | FUNCTION ID LPAREN tyfields RPAREN . COLON ID EQ exp

    COLON  shift, and go to state 136
    EQ     shift, and go to state 137


State 130

   56 vardec: VAR ID COLON ID ASSIGN . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 138
    seqexp   go to state 14
    voidexp  go to state 15
    lvalue   go to state 16


State 131

   50 ty: LBRACE tyfields . RBRACE

    RBRACE  shift, and go to state 139


State 132

   51 ty: ARRAY OF . ID

    ID  shift, and go to state 140


State 133

   27 exp: FOR ID ASSIGN exp TO exp DO . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 141
    seqexp   go to state 14
    voidexp  go to state 15
    lvalue   go to state 16


State 134

   45 tyfield: ID COLON ID .

    $default  reduce using rule 45 (tyfield)


State 135

   47 tyfields: tyfield COMMA tyfields .

    $default  reduce using rule 47 (tyfields)


State 136

   58 fundec: FUNCTION ID LPAREN tyfields RPAREN COLON . ID EQ exp

    ID  shift, and go to state 142


State 137

   57 fundec: FUNCTION ID LPAREN tyfields RPAREN EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 143
    seqexp   go to state 14
    voidexp  go to state 15
    lvalue   go to state 16


State 138

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   15    | exp . NEQ exp
   16    | exp . LT exp
   17    | exp . LE exp
   18    | exp . GT exp
   19    | exp . GE exp
   20    | exp . AND exp
   21    | exp . OR exp
   56 vardec: VAR ID COLON ID ASSIGN exp .

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42
    EQ      shift, and go to state 43
    NEQ     shift, and go to state 44
    LT      shift, and go to state 45
    LE      shift, and go to state 46
    GT      shift, and go to state 47
    GE      shift, and go to state 48
    AND     shift, and go to state 49
    OR      shift, and go to state 50

    $default  reduce using rule 56 (vardec)


State 139

   50 ty: LBRACE tyfields RBRACE .

    $default  reduce using rule 50 (ty)


State 140

   51 ty: ARRAY OF ID .

    $default  reduce using rule 51 (ty)


State 141

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   15    | exp . NEQ exp
   16    | exp . LT exp
   17    | exp . LE exp
   18    | exp . GT exp
   19    | exp . GE exp
   20    | exp . AND exp
   21    | exp . OR exp
   27    | FOR ID ASSIGN exp TO exp DO exp .

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42
    EQ      shift, and go to state 43
    NEQ     shift, and go to state 44
    LT      shift, and go to state 45
    LE      shift, and go to state 46
    GT      shift, and go to state 47
    GE      shift, and go to state 48
    AND     shift, and go to state 49
    OR      shift, and go to state 50

    $default  reduce using rule 27 (exp)


State 142

   58 fundec: FUNCTION ID LPAREN tyfields RPAREN COLON ID . EQ exp

    EQ  shift, and go to state 144


State 143

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   15    | exp . NEQ exp
   16    | exp . LT exp
   17    | exp . LE exp
   18    | exp . GT exp
   19    | exp . GE exp
   20    | exp . AND exp
   21    | exp . OR exp
   57 fundec: FUNCTION ID LPAREN tyfields RPAREN EQ exp .

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42
    EQ      shift, and go to state 43
    NEQ     shift, and go to state 44
    LT      shift, and go to state 45
    LE      shift, and go to state 46
    GT      shift, and go to state 47
    GE      shift, and go to state 48
    AND     shift, and go to state 49
    OR      shift, and go to state 50

    $default  reduce using rule 57 (fundec)


State 144

   58 fundec: FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ . exp

    ID      shift, and go to state 1
    STRING  shift, and go to state 2
    INT     shift, and go to state 3
    LPAREN  shift, and go to state 4
    MINUS   shift, and go to state 5
    IF      shift, and go to state 6
    WHILE   shift, and go to state 7
    FOR     shift, and go to state 8
    LET     shift, and go to state 9
    BREAK   shift, and go to state 10
    NIL     shift, and go to state 11

    exp      go to state 145
    seqexp   go to state 14
    voidexp  go to state 15
    lvalue   go to state 16


State 145

   10 exp: exp . PLUS exp
   11    | exp . MINUS exp
   12    | exp . TIMES exp
   13    | exp . DIVIDE exp
   14    | exp . EQ exp
   15    | exp . NEQ exp
   16    | exp . LT exp
   17    | exp . LE exp
   18    | exp . GT exp
   19    | exp . GE exp
   20    | exp . AND exp
   21    | exp . OR exp
   58 fundec: FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ exp .

    PLUS    shift, and go to state 39
    MINUS   shift, and go to state 40
    TIMES   shift, and go to state 41
    DIVIDE  shift, and go to state 42
    EQ      shift, and go to state 43
    NEQ     shift, and go to state 44
    LT      shift, and go to state 45
    LE      shift, and go to state 46
    GT      shift, and go to state 47
    GE      shift, and go to state 48
    AND     shift, and go to state 49
    OR      shift, and go to state 50

    $default  reduce using rule 58 (fundec)
