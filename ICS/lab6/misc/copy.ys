# Jin Ruiyang 516030910408
# begin at address 0
    .pos 0
    irmovq stack,%rsp
    call main
    halt

.align 8
# Source block
src:
    .quad 0x00a
    .quad 0x0b0
    .quad 0xc00
# Destination block
dest:
    .quad 0x111
    .quad 0x222
    .quad 0x333

main:
    irmovq src,%rdi
    irmovq dest,%rsi
    irmovq $3,%rdx
    call copy_block
    ret

# long copy_block(long *src, long *dest, long len)
# src in %rdi, dest in %rsi, len in %rdx
copy_block:
    pushq %rbx # push callee-saved register
    xorq %rax,%rax # result = 0
    irmovq $8,%r8
    irmovq $1,%r9
    andq %rdx,%rdx # set CC
    jmp test
loop:
    mrmovq (%rdi),%rbx # get *src
    rmmovq %rbx,(%rsi) # store in *dest
    xorq %rbx,%rax # result ^= val
    addq %r8,%rdi # src++
    addq %r8,%rsi # dst++
    subq %r9,%rdx # len--, set CC
test:
    jne loop
    popq %rbx # pop callee-saved register
    ret

# stack starts here
    .pos 0x200
stack:
