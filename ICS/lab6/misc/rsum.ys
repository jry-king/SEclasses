# Jin Ruiyang 516030910408
# begin at address 0
    .pos 0
    irmovq stack,%rsp
    call main
    halt

# sample linked list
ele1:
    .quad 0x00a
    .quad ele2
ele2:
    .quad 0x0b0
    .quad ele3
ele3:
    .quad 0xc00
    .quad 0

main:
    irmovq ele1,%rdi
    call rsum_list
    ret

# long rsum_list(list_ptr ls)
# ls in %rdi
rsum_list:
    xorq %rax,%rax # rsum = 0
    andq %rdi,%rdi # set CC
    je return # return if the pointer is NULL
    pushq %rbx # save callee-saved register
    mrmovq (%rdi),%rbx # get *ls
    mrmovq 0x8(%rdi),%rdi # visit the next element
    call rsum_list
    addq %rbx,%rax
    popq %rbx # restore callee-saved register
return:
    ret

# stack starts here
    .pos 0x100
stack:
